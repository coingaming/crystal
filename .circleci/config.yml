defaults: &defaults
  docker:
    - image: heathmont/elixir-builder:1.6.5

check_vars: &check_vars
  run:
    name:       Check variables
    command:    ./scripts/check-vars.sh "in system" "ROBOT_SSH_KEY" "DOCKER_EMAIL" "DOCKER_ORG" "DOCKER_PASS" "DOCKER_USER"

setup_ssh_key: &setup_ssh_key
  run:
    name:       Setup robot SSH key
    command:    echo "$ROBOT_SSH_KEY" | base64 --decode > $HOME/.ssh/id_rsa.robot && chmod 600 $HOME/.ssh/id_rsa.robot && ssh-add $HOME/.ssh/id_rsa.robot

setup_ssh_config: &setup_ssh_config
  run:
    name:        Setup SSH config
    command:     echo -e "Host *\n IdentityFile $HOME/.ssh/id_rsa.robot\n IdentitiesOnly yes" > $HOME/.ssh/config

fetch_submodules: &fetch_submodules
  run:
    name:       Fetch submodules
    command:    git submodule update --init --recursive

fetch_dependencies: &fetch_dependencies
  run:
    name:       Fetch dependencies
    command:    mix deps.get

compile_dependencies: &compile_dependencies
  run:
    name:       Compile dependencies
    command:    mix deps.compile

compile_protocols: &compile_protocols
  run:
    name:       Compile protocols
    command:    mix compile.protocols --warnings-as-errors

version: 2
jobs:
  test:
    <<: *defaults
    working_directory: /app
    environment:
      MIX_ENV: test
    steps:
      - checkout
      - run:
          name:       Check variables
          command:    ./scripts/check-vars.sh "in system" "ROBOT_SSH_KEY" "COVERALLS_REPO_TOKEN"
      - <<: *setup_ssh_key
      - <<: *setup_ssh_config
      - <<: *fetch_submodules
      - restore_cache:
          keys:
            - test-{{ checksum "mix.lock" }}-{{ .Revision }}
            - test-{{ checksum "mix.lock" }}
            - test-
      - <<: *fetch_dependencies
      - <<: *compile_dependencies
      - <<: *compile_protocols
      # - run:
      #     name:       Create test DB
      #     command:    mix ecto.create
      # - run:
      #     name:       Migrate test DB
      #     command:    mix ecto.migrate
      - run:
          name:       Run tests
          command:    mix coveralls.circle
      - run:
          name:       Run style checks
          command:    mix credo --strict
      - run:
          name:       Run Dialyzer type checks
          command:    mix dialyzer --halt-exit-status
          no_output_timeout: 15m
      - save_cache:
          key: test-{{ checksum "mix.lock" }}-{{ .Revision }}
          paths:
            - _build
            - deps
            - ~/.mix
  doc:
    <<: *defaults
    environment:
      MIX_ENV: dev
    working_directory: /app
    steps:
      - checkout
      - run:
          name:       Check variables
          command:    ./scripts/check-vars.sh "in system" "ROBOT_SSH_KEY" "CONFLUENCE_SECRET"
      - <<: *setup_ssh_key
      - <<: *setup_ssh_config
      - <<: *fetch_submodules
      - restore_cache:
          keys:
            - doc-{{ checksum "mix.lock" }}-{{ .Revision }}
            - doc-{{ checksum "mix.lock" }}
            - doc-
      - <<: *fetch_dependencies
      - <<: *compile_dependencies
      - <<: *compile_protocols
      - save_cache:
          key: doc-{{ checksum "mix.lock" }}-{{ .Revision }}
          paths:
            - _build
            - deps
            - ~/.mix
      - run:
          name:       Compile documentation
          command:    mix docs
      - run:
          name:       Push documentation to confluence
          command:    export $(cat "./scripts/.env" | xargs) && mix boilex.ci.confluence.push "$CIRCLE_TAG"

workflows:
  version: 2
  test:
    jobs:
      - test:
          filters:
            branches:
              only: /^([A-Z]{2,}-[0-9]+|hotfix-.+|feature-.*)$/
  test-doc:
    jobs:
      - test:
          filters:
            tags:
              only: /.*/
            branches:
              only: /^master$/
      - doc:
          filters:
            tags:
              only: /.*/
            branches:
              only: /^master$/
